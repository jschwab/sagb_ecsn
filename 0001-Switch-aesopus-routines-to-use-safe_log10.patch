From 99375f0e6383c15869a8ee00934254620bbfb67e Mon Sep 17 00:00:00 2001
From: Josiah Schwab <jschwab@gmail.com>
Date: Tue, 5 May 2020 09:23:02 -0700
Subject: [PATCH] Switch aesopus routines to use safe_log10

Don't segfault at zero metalicities / enhancements.
---
 kap/private/kap_aesopus.f90 | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/kap/private/kap_aesopus.f90 b/kap/private/kap_aesopus.f90
index 7f06d740c8..93e1a09312 100644
--- a/kap/private/kap_aesopus.f90
+++ b/kap/private/kap_aesopus.f90
@@ -229,7 +229,7 @@ contains
     ! pre-compute logZs
     allocate(kA% logZs(kA % num_Zs))
     do n = 1, kA % num_Zs
-       kA% logZs(n) = log10(kA% Zs(n))
+       kA% logZs(n) = safe_log10(kA% Zs(n))
     end do
 
     ! now, there is one group for each Z
@@ -477,7 +477,7 @@ contains
 
     nullify(work1)
     allocate(work1(nZ*pm_work_size))
-    x_new(1)=log10(my_Z)
+    x_new(1)=safe_log10(my_Z)
 
     ! do the Z interpolation
     ! loop does over kap and its derivatives
@@ -532,9 +532,9 @@ contains
     ! Note that the reference values are different for different solar abundance patterns
 
     Zref = kA% Zs(iZ)
-    fCO = log10(XC/XO) - kA% fCO_ref
-    fC = log10(XC/Zref) - kA% fC_ref
-    fN = log10(XN/Zref) - kA% fN_ref
+    fCO = safe_log10(XC/XO) - kA% fCO_ref
+    fC = safe_log10(XC/Zref) - kA% fC_ref
+    fN = safe_log10(XN/Zref) - kA% fN_ref
 
     if (debug) then
        write(*,*) 'call to AESOPUS_interp_RT'
-- 
2.26.2

